using System;
using System.Drawing;
using System.Windows.Forms;
using do_account_checker.DarkOrbit;
using do_account_checker.GUI;

namespace do_account_checker
{
    public partial class MainForm : Form
    {
        private readonly GuiHandler _guiHandler;
        public MainForm()
        {
            InitializeComponent();
            _guiHandler = new GuiHandler(this);
        }

        /*
         * Methods to control UI behavior
         */

        public void SetLoginStatus(bool status)
        {
            pnlStatus.BackColor = status ? Color.Green : Color.Red;
        }

        public void ResetLoginStatus()
        {
            pnlStatus.BackColor = Color.Orange;
        }

        public void SetLoginStatusList(bool status, int index)
        {
            listAccounts.Items[index].SubItems[1].Text = status ? "Successful" : "Failed";
        }

        public void SetDailyStatusList(string status, int index)
        {
            listAccounts.Items[index].SubItems[2].Text = status;
        }

        public void SetUridium(string uridium)
        {
            lblUridium.Text = uridium;
        }

        public void SetUserId(string userId)
        {
            lblUserId.Text = userId;
        }

        public void SetCredits(string credits)
        {
            lblCredits.Text = credits;
        }

        public void SetServer(string server)
        {
            lblServer.Text = server;
        }

        public void SetLevel(string level)
        {
            lblLevel.Text = level;
        }

        public void SetExperience(string experience)
        {
            lblExperience.Text = experience;
        }

        public void SetHonor(string honor)
        {
            lblHonor.Text = honor;
        }

        public void AddToList(User[] users)
        {
            foreach (var user in users)
            {
                AddToList(user.Username);
            }
            listAccounts.Columns[0].Width = -1; //Resize column to longest username
            listAccounts.Columns[0].Width = listAccounts.Columns[0].Width < 60 ? -2 : -1;
        }

        private void AddToList(string username, string status = "Idle")
        {
            string[] items = { username, status, ""};
            listAccounts.Items.Add(new ListViewItem(items));
        }

        public void ClearList()
        {
            listAccounts.Items.Clear();
        }

        /*
         * Autogenerated ButtonClick Events
         */

        private void BtnAddAccount_Click(object sender, EventArgs e)
        {
            _guiHandler.Login(txtUsername.Text, txtPassword.Text, true);
        }

        private void BtnSingleLogin_Click(object sender, EventArgs e)
        {
            _guiHandler.Login(txtUsername.Text, txtPassword.Text, false);
        }

        private void BtnLogin_Click(object sender, EventArgs e)
        {
            var index = listAccounts.Items.IndexOf(listAccounts.SelectedItems[0]); //TODO SelectedIndices?
            _guiHandler.LoginSelected(index);
        }

        private void BtnReload_Click(object sender, EventArgs e)
        {
            
        }

        private void BtnCollect_Click(object sender, EventArgs e)
        {
            var index = listAccounts.Items.IndexOf(listAccounts.SelectedItems[0]);
            _guiHandler.CollectDailySelected(index);
        }

        private void BtnCollectAll_Click(object sender, EventArgs e)
        {
            _guiHandler.CollectDailyAll();
        }
    }
}
